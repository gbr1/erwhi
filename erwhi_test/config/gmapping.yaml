# gmapping_param.yaml
#
# Copyright (C) 2015 Alessandro Francescon
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Process 1 out of every this many scans (set it to a higher number to skip more scans)
throttle_scans: 1

# The frame attached to the mobile base, to the map and to the odometry system
base_frame: base_link
map_frame: map
odom_frame: odom

# How long (in seconds) between updates to the map. 
# Lowering this number updates the occupancy grid more often, at the expense of greater computational load.
map_update_interval: 10

# The maximum usable range of the laser. A beam is cropped to this value
maxUrange: 5.5

# The maximum range of the sensor. If regions with no obstacles within the range of the
# sensor should appear as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange.
maxRange: 5.5

# The sigma used by the greedy endpoint matching
sigma: 0.05

# The kernel in which to look for a correspondence
kernelSize: 1

# The optimization step in translation and in rotation
lstep: 0.05
astep: 0.05

# The number of iterations of the scanmatcher
iterations: 5

# The sigma of a beam used for likelihood computation
lsigma: 0.075

# Gain to be used while evaluating the likelihood, for smoothing the resampling effects
ogain: 3.0

# Number of beams to skip in each scan.
lskip: 0

# Minimum score for considering the outcome of the scan matching good.
# Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m).
# Scores go up to 600+, try 50 for example when experiencing jumping estimate issues.
minimumScore: 50

# Odometry error:
# - in translation as a function of translation (rho/rho);
# - in translation as a function of rotation (rho/theta);
# - in rotation as a function of translation (theta/rho);
# - in rotation as a function of rotation (theta/theta).
srr: 0.1
srt: 0.2
str: 0.1
stt: 0.2

# Process a scan each time the robot translates, or rotates, this far
linearUpdate: 0.2
angularUpdate: 0.25

# Process a scan if the last scan proccessed is older than the update time in seconds. 
# A value less than zero will turn time based updates off.
temporalUpdate: 5.0

# The Neff based resampling threshold
resampleThreshold: 0.5

# Number of particles in the filter
particles: 30

# Initial map size
xmin: -10
xmax: 10
ymin: -10
ymax: 10

# Processing parameters (resolution of the map)
delta: 0.025

# Translational sampling range for the likelihood
llsamplerange: 0.01

# Translational sampling step for the likelihood
llsamplestep: 0.01

# Angular sampling range for the likelihood
lasamplerange: 0.005

# Angular sampling step for the likelihood
lasamplestep: 0.005

# How long (in seconds) between transform publications.
transform_publish_period: 0.1

# Threshold on gmapping's occupancy values. Cells with greater occupancy are considered
# occupied (i.e., set to 100 in the resulting sensor_msgs/LaserScan).
occ_thresh: 0.25
